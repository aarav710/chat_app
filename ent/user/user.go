// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBio holds the string denoting the bio field in the database.
	FieldBio = "bio"
	// EdgeLogin holds the string denoting the login edge name in mutations.
	EdgeLogin = "login"
	// EdgeUserFollowers holds the string denoting the user_followers edge name in mutations.
	EdgeUserFollowers = "user_followers"
	// EdgeFollowers holds the string denoting the followers edge name in mutations.
	EdgeFollowers = "followers"
	// EdgeUserFollowings holds the string denoting the user_followings edge name in mutations.
	EdgeUserFollowings = "user_followings"
	// EdgeFollowing holds the string denoting the following edge name in mutations.
	EdgeFollowing = "following"
	// EdgeMessages holds the string denoting the messages edge name in mutations.
	EdgeMessages = "messages"
	// Table holds the table name of the user in the database.
	Table = "users"
	// LoginTable is the table that holds the login relation/edge.
	LoginTable = "users"
	// LoginInverseTable is the table name for the Login entity.
	// It exists in this package in order to avoid circular dependency with the "login" package.
	LoginInverseTable = "logins"
	// LoginColumn is the table column denoting the login relation/edge.
	LoginColumn = "login_user"
	// UserFollowersTable is the table that holds the user_followers relation/edge.
	UserFollowersTable = "users"
	// UserFollowersColumn is the table column denoting the user_followers relation/edge.
	UserFollowersColumn = "user_followers"
	// FollowersTable is the table that holds the followers relation/edge.
	FollowersTable = "users"
	// FollowersColumn is the table column denoting the followers relation/edge.
	FollowersColumn = "user_followers"
	// UserFollowingsTable is the table that holds the user_followings relation/edge.
	UserFollowingsTable = "users"
	// UserFollowingsColumn is the table column denoting the user_followings relation/edge.
	UserFollowingsColumn = "user_following"
	// FollowingTable is the table that holds the following relation/edge.
	FollowingTable = "users"
	// FollowingColumn is the table column denoting the following relation/edge.
	FollowingColumn = "user_following"
	// MessagesTable is the table that holds the messages relation/edge.
	MessagesTable = "messages"
	// MessagesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessagesInverseTable = "messages"
	// MessagesColumn is the table column denoting the messages relation/edge.
	MessagesColumn = "user_messages"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldBio,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"login_user",
	"user_followers",
	"user_following",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
