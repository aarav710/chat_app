// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBio holds the string denoting the bio field in the database.
	FieldBio = "bio"
	// EdgeLogin holds the string denoting the login edge name in mutations.
	EdgeLogin = "login"
	// EdgeMessages holds the string denoting the messages edge name in mutations.
	EdgeMessages = "messages"
	// EdgeChats holds the string denoting the chats edge name in mutations.
	EdgeChats = "chats"
	// EdgeRolesInChats holds the string denoting the roles_in_chats edge name in mutations.
	EdgeRolesInChats = "roles_in_chats"
	// Table holds the table name of the user in the database.
	Table = "users"
	// LoginTable is the table that holds the login relation/edge.
	LoginTable = "users"
	// LoginInverseTable is the table name for the Login entity.
	// It exists in this package in order to avoid circular dependency with the "login" package.
	LoginInverseTable = "logins"
	// LoginColumn is the table column denoting the login relation/edge.
	LoginColumn = "login_user"
	// MessagesTable is the table that holds the messages relation/edge.
	MessagesTable = "messages"
	// MessagesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessagesInverseTable = "messages"
	// MessagesColumn is the table column denoting the messages relation/edge.
	MessagesColumn = "user_messages"
	// ChatsTable is the table that holds the chats relation/edge. The primary key declared below.
	ChatsTable = "chat_users"
	// ChatsInverseTable is the table name for the Chat entity.
	// It exists in this package in order to avoid circular dependency with the "chat" package.
	ChatsInverseTable = "chats"
	// RolesInChatsTable is the table that holds the roles_in_chats relation/edge.
	RolesInChatsTable = "chat_roles"
	// RolesInChatsInverseTable is the table name for the ChatRoles entity.
	// It exists in this package in order to avoid circular dependency with the "chatroles" package.
	RolesInChatsInverseTable = "chat_roles"
	// RolesInChatsColumn is the table column denoting the roles_in_chats relation/edge.
	RolesInChatsColumn = "user_roles_in_chats"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldBio,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"login_user",
}

var (
	// ChatsPrimaryKey and ChatsColumn2 are the table columns denoting the
	// primary key for the chats relation (M2M).
	ChatsPrimaryKey = []string{"chat_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
